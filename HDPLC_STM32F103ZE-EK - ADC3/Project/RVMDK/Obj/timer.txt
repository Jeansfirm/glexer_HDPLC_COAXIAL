; generated by ARM C/C++ Compiler, 4.1 [Build 561]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Obj\timer.o --depend=.\Obj\timer.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\..\Libraries\CMSIS\Core\CM3 -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Source\inc -I..\..\Libraries\uIP-1.0\apps\webserver -I..\..\Libraries\uIP-1.0\uip -I..\..\Source\src\uIP_DM9000 -I..\..\Libraries\uIP-1.0\apps\hello-world -ID:\Keil4\ARM\INC -ID:\Keil4\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\Libraries\uIP-1.0\uip\timer.c]
                          THUMB

                          AREA ||i.timer_expired||, CODE, READONLY, ALIGN=1

                  timer_expired PROC
;;;120    int
;;;121    timer_expired(struct timer *t)
000000  b510              PUSH     {r4,lr}
;;;122    {
000002  4604              MOV      r4,r0
;;;123      return (clock_time_t)(clock_time() - t->start) >= (clock_time_t)t->interval;
000004  f7fffffe          BL       clock_time
000008  6821              LDR      r1,[r4,#0]
00000a  1a40              SUBS     r0,r0,r1
00000c  6861              LDR      r1,[r4,#4]
00000e  4288              CMP      r0,r1
000010  db01              BLT      |L1.22|
000012  2001              MOVS     r0,#1
;;;124    }
000014  bd10              POP      {r4,pc}
                  |L1.22|
000016  2000              MOVS     r0,#0                 ;123
000018  bd10              POP      {r4,pc}
;;;125    /*---------------------------------------------------------------------------*/
                          ENDP


                          AREA ||i.timer_reset||, CODE, READONLY, ALIGN=1

                  timer_reset PROC
;;;83     void
;;;84     timer_reset(struct timer *t)
000000  e9d01200          LDRD     r1,r2,[r0,#0]
;;;85     {
;;;86       t->start += t->interval;
000004  4411              ADD      r1,r1,r2
000006  6001              STR      r1,[r0,#0]
;;;87     }
000008  4770              BX       lr
;;;88     /*---------------------------------------------------------------------------*/
                          ENDP


                          AREA ||i.timer_restart||, CODE, READONLY, ALIGN=1

                  timer_restart PROC
;;;103    void
;;;104    timer_restart(struct timer *t)
000000  b510              PUSH     {r4,lr}
;;;105    {
000002  4604              MOV      r4,r0
;;;106      t->start = clock_time();
000004  f7fffffe          BL       clock_time
000008  6020              STR      r0,[r4,#0]
;;;107    }
00000a  bd10              POP      {r4,pc}
;;;108    /*---------------------------------------------------------------------------*/
                          ENDP


                          AREA ||i.timer_set||, CODE, READONLY, ALIGN=1

                  timer_set PROC
;;;63     void
;;;64     timer_set(struct timer *t, clock_time_t interval)
000000  b510              PUSH     {r4,lr}
;;;65     {
000002  4604              MOV      r4,r0
;;;66       t->interval = interval;
;;;67       t->start = clock_time();
000004  6041              STR      r1,[r0,#4]
000006  f7fffffe          BL       clock_time
00000a  6020              STR      r0,[r4,#0]
;;;68     }
00000c  bd10              POP      {r4,pc}
;;;69     /*---------------------------------------------------------------------------*/
                          ENDP

